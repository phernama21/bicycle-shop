# docker-compose.yml
version: '3.8'

services:
  api:
    build: ./api-backend
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/bicycle_shop
      - RAILS_ENV=development
    volumes:
      - ./api-backend:/app
      - api_gems:/usr/local/bundle
    command: bash -c "if [ ! -f ./bin/rails ]; then rails new . --api --database=postgresql --skip-test;fi && rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"

  frontoffice:
    build: ./frontoffice
    ports:
      - "3001:3001"
    volumes:
      - ./frontoffice:/app
      - frontoffice_node_modules:/app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
    depends_on:
      - api
    command: sh -c "npm install && rm -rf .next && npm run dev -- -p 3001"

  backoffice:
    build: ./backoffice
    ports:
      - "3002:3002"
    volumes:
      - ./backoffice:/app
      - backoffice_node_modules:/app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
    depends_on:
      - api
    command: sh -c "npm install && rm -rf .next && npm run dev -- -p 3002"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=bicycle_shop
    ports:
      - "5432:5432"

volumes:
  postgres_data:
  api_gems:
  frontoffice_node_modules:
  backoffice_node_modules: